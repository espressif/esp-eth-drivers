workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"

push_master_to_github:
  stage: deploy
  tags:
    - github_sync
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
  when: on_success
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  variables:
    GIT_DEPTH: 0
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GH_PUSH_KEY > ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git remote add github git@github.com:espressif/esp-eth-drivers.git
    - echo "git push github ${CI_COMMIT_SHA}:refs/heads/${CI_COMMIT_REF_NAME}" # TODO just for testing

# Since we use FF merge strategy, we needed to lock Gitlab master branch during the release
# to ensure that SHA of the release commit from Gitlab matches with the SHA of release PR.
# Now is time to unlock it.
set_branch_protection:
  stage: deploy
  tags:
    - github_sync
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^chore\(master\):/
  when: on_success
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  variables:
    GIT_DEPTH: 0
    GITLAB_URL: $CI_SERVER_URL
    GITLAB_TOKEN: $GITLAB_TOKEN # TODO define in GL
  script:
    # Developers can merge
    - python3 tools/protect_branch.py --push-level 0 --merge-level 30
